Index.PACKAGES = {"me.frmr.kafka.detective.matchfinder" : [{"name" : "me.frmr.kafka.detective.matchfinder.KeyEqualsFinder", "shortDescription" : "A simple match finder that checks for equivalent keys.", "members_class" : [{"label" : "find", "tail" : "(testMessage: MonitorObjectEnvelope, referenceWindow: Seq[MonitorObjectEnvelope]): MonitorMatchFindResult", "member" : "me.frmr.kafka.detective.matchfinder.KeyEqualsFinder.find", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#find(testMessage:me.frmr.kafka.detective.api.MonitorObjectEnvelope,referenceWindow:Seq[me.frmr.kafka.detective.api.MonitorObjectEnvelope]):me.frmr.kafka.detective.api.MonitorMatchFindResult", "kind" : "def"}, {"member" : "me.frmr.kafka.detective.matchfinder.KeyEqualsFinder#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.StrictLogging.logger", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#logger:com.typesafe.scalalogging.Logger", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/frmr\/kafka\/detective\/matchfinder\/KeyEqualsFinder.html", "kind" : "class"}], "me.frmr.kafka.detective" : [], "me" : [], "me.frmr" : [], "me.frmr.kafka" : [], "me.frmr.kafka.detective.matchtester" : [{"name" : "me.frmr.kafka.detective.matchtester.ValueEqualsTester", "shortDescription" : "A MonitorMatchTester that passes if Object.equals returns true.", "members_class" : [{"label" : "testMatch", "tail" : "(testMessage: MonitorObjectEnvelope, referenceMessage: MonitorObjectEnvelope): MonitorMatchTestResult", "member" : "me.frmr.kafka.detective.matchtester.ValueEqualsTester.testMatch", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#testMatch(testMessage:me.frmr.kafka.detective.api.MonitorObjectEnvelope,referenceMessage:me.frmr.kafka.detective.api.MonitorObjectEnvelope):me.frmr.kafka.detective.api.MonitorMatchTestResult", "kind" : "def"}, {"member" : "me.frmr.kafka.detective.matchtester.ValueEqualsTester#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "me\/frmr\/kafka\/detective\/matchtester\/ValueEqualsTester.html", "kind" : "class"}], "me.frmr.kafka.detective.api" : [{"name" : "me.frmr.kafka.detective.api.FoundMatch", "shortDescription" : "A result from a MonitorMatchFinder indicating that a reference message that shouldmatch was located.", "members_case class" : [{"member" : "me.frmr.kafka.detective.api.FoundMatch#<init>", "error" : "unsupported entity"}, {"label" : "matchingReferenceMessage", "tail" : ": MonitorObjectEnvelope", "member" : "me.frmr.kafka.detective.api.FoundMatch.matchingReferenceMessage", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#matchingReferenceMessage:me.frmr.kafka.detective.api.MonitorObjectEnvelope", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "me\/frmr\/kafka\/detective\/api\/FoundMatch.html", "kind" : "case class"}, {"name" : "me.frmr.kafka.detective.api.IgnoreMessage", "shortDescription" : "A result from a MonitorMatchFinder indicating that, based on the information available,the provided test message should be ignored.", "members_case class" : [{"member" : "me.frmr.kafka.detective.api.IgnoreMessage#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "me\/frmr\/kafka\/detective\/api\/IgnoreMessage.html", "kind" : "case class"}, {"name" : "me.frmr.kafka.detective.api.MonitorDeserializer", "shortDescription" : "An interface that instructs Detective how to deserialize messages from byte arrays into concreteJava objects.", "members_class" : [{"label" : "packEnvelope", "tail" : "(offset: Long, partition: Int, timestamp: Long, deserializedKeyClass: Class[_], deserializedKey: AnyRef, deserializedValueClass: Class[_], deserializedValue: AnyRef): MonitorObjectEnvelope", "member" : "me.frmr.kafka.detective.api.MonitorDeserializer.packEnvelope", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#packEnvelope(offset:Long,partition:Int,timestamp:Long,deserializedKeyClass:Class[_],deserializedKey:Object,deserializedValueClass:Class[_],deserializedValue:Object):me.frmr.kafka.detective.api.MonitorObjectEnvelope", "kind" : "final def"}, {"member" : "me.frmr.kafka.detective.api.MonitorDeserializer#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deserialize", "tail" : "(offset: Long, partition: Int, timestamp: Long, keyBytes: Array[Byte], valueBytes: Array[Byte]): MonitorObjectEnvelope", "member" : "me.frmr.kafka.detective.api.MonitorDeserializer.deserialize", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html#deserialize(offset:Long,partition:Int,timestamp:Long,keyBytes:Array[Byte],valueBytes:Array[Byte]):me.frmr.kafka.detective.api.MonitorObjectEnvelope", "kind" : "abstract def"}], "class" : "me\/frmr\/kafka\/detective\/api\/MonitorDeserializer.html", "kind" : "class"}, {"name" : "me.frmr.kafka.detective.api.MonitorMatchFinder", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "find", "tail" : "(testMessage: MonitorObjectEnvelope, referenceWindow: Seq[MonitorObjectEnvelope]): MonitorMatchFindResult", "member" : "me.frmr.kafka.detective.api.MonitorMatchFinder.find", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html#find(testMessage:me.frmr.kafka.detective.api.MonitorObjectEnvelope,referenceWindow:Seq[me.frmr.kafka.detective.api.MonitorObjectEnvelope]):me.frmr.kafka.detective.api.MonitorMatchFindResult", "kind" : "abstract def"}], "shortDescription" : "In the Kafka Detective world, a MonitorMatchFinder is the interface responsible for determiningwhat mesages in the given referenceWindow should be a match for the given testMessage.", "trait" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFinder.html", "kind" : "trait"}, {"name" : "me.frmr.kafka.detective.api.MonitorMatchFindResult", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "The common parent for any kind of result from a MonitorMatchFinder", "trait" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchFindResult.html", "kind" : "trait"}, {"name" : "me.frmr.kafka.detective.api.MonitorMatchTester", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "testMatch", "tail" : "(testMessage: MonitorObjectEnvelope, referenceMessage: MonitorObjectEnvelope): MonitorMatchTestResult", "member" : "me.frmr.kafka.detective.api.MonitorMatchTester.testMatch", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html#testMatch(testMessage:me.frmr.kafka.detective.api.MonitorObjectEnvelope,referenceMessage:me.frmr.kafka.detective.api.MonitorObjectEnvelope):me.frmr.kafka.detective.api.MonitorMatchTestResult", "kind" : "abstract def"}], "shortDescription" : "In the Kafka Detective world, the MonitorMatchTester is responsible for determining whether ornot a given testMessage and a given referenceMessage match.", "trait" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTester.html", "kind" : "trait"}, {"name" : "me.frmr.kafka.detective.api.MonitorMatchTestResult", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "A type indicating the result of a match test.", "trait" : "me\/frmr\/kafka\/detective\/api\/MonitorMatchTestResult.html", "kind" : "trait"}, {"name" : "me.frmr.kafka.detective.api.MonitorObjectEnvelope", "shortDescription" : "A wrapper around a message received from a Kafka topic.", "members_case class" : [{"member" : "me.frmr.kafka.detective.api.MonitorObjectEnvelope#<init>", "error" : "unsupported entity"}, {"label" : "valueInstance", "tail" : ": AnyRef", "member" : "me.frmr.kafka.detective.api.MonitorObjectEnvelope.valueInstance", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#valueInstance:Object", "kind" : "val"}, {"label" : "valueClass", "tail" : ": Class[_]", "member" : "me.frmr.kafka.detective.api.MonitorObjectEnvelope.valueClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#valueClass:Class[_]", "kind" : "val"}, {"label" : "keyInstance", "tail" : ": AnyRef", "member" : "me.frmr.kafka.detective.api.MonitorObjectEnvelope.keyInstance", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#keyInstance:Object", "kind" : "val"}, {"label" : "keyClass", "tail" : ": Class[_]", "member" : "me.frmr.kafka.detective.api.MonitorObjectEnvelope.keyClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#keyClass:Class[_]", "kind" : "val"}, {"label" : "messageTimestamp", "tail" : ": Long", "member" : "me.frmr.kafka.detective.api.MonitorObjectEnvelope.messageTimestamp", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#messageTimestamp:Long", "kind" : "val"}, {"label" : "messagePartition", "tail" : ": Int", "member" : "me.frmr.kafka.detective.api.MonitorObjectEnvelope.messagePartition", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#messagePartition:Int", "kind" : "val"}, {"label" : "messageOffset", "tail" : ": Long", "member" : "me.frmr.kafka.detective.api.MonitorObjectEnvelope.messageOffset", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#messageOffset:Long", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "me\/frmr\/kafka\/detective\/api\/MonitorObjectEnvelope.html", "kind" : "case class"}, {"name" : "me.frmr.kafka.detective.api.MonitorReporter", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "close", "tail" : "(): Unit", "member" : "me.frmr.kafka.detective.api.MonitorReporter.close", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#close():Unit", "kind" : "abstract def"}, {"label" : "reportIgnored", "tail" : "(envelope: MonitorObjectEnvelope): Unit", "member" : "me.frmr.kafka.detective.api.MonitorReporter.reportIgnored", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#reportIgnored(envelope:me.frmr.kafka.detective.api.MonitorObjectEnvelope):Unit", "kind" : "abstract def"}, {"label" : "reportNoMatch", "tail" : "(envelope: MonitorObjectEnvelope, referenceWindowStart: Long, referenceWindowEnd: Long): Unit", "member" : "me.frmr.kafka.detective.api.MonitorReporter.reportNoMatch", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#reportNoMatch(envelope:me.frmr.kafka.detective.api.MonitorObjectEnvelope,referenceWindowStart:Long,referenceWindowEnd:Long):Unit", "kind" : "abstract def"}, {"label" : "reportFailedMatch", "tail" : "(envelope: MonitorObjectEnvelope, referenceEnvelope: MonitorObjectEnvelope, reason: String): Unit", "member" : "me.frmr.kafka.detective.api.MonitorReporter.reportFailedMatch", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#reportFailedMatch(envelope:me.frmr.kafka.detective.api.MonitorObjectEnvelope,referenceEnvelope:me.frmr.kafka.detective.api.MonitorObjectEnvelope,reason:String):Unit", "kind" : "abstract def"}, {"label" : "reportSuccessfulMatch", "tail" : "(envelope: MonitorObjectEnvelope): Unit", "member" : "me.frmr.kafka.detective.api.MonitorReporter.reportSuccessfulMatch", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html#reportSuccessfulMatch(envelope:me.frmr.kafka.detective.api.MonitorObjectEnvelope):Unit", "kind" : "abstract def"}], "shortDescription" : "In the Kafka Detective world, a MonitorReporter is responsible for reporting match eventsout to some other system.", "trait" : "me\/frmr\/kafka\/detective\/api\/MonitorReporter.html", "kind" : "trait"}, {"name" : "me.frmr.kafka.detective.api.MonitorReporterTransformer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transform", "tail" : "(thing: AnyRef): AnyRef", "member" : "me.frmr.kafka.detective.api.MonitorReporterTransformer.transform", "link" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html#transform(thing:Object):Object", "kind" : "abstract def"}], "shortDescription" : "In the Kafka Detective world, a MonitorReporterTransformer is responsible for doing any kindof transformation required before writing the object out to some external source.", "trait" : "me\/frmr\/kafka\/detective\/api\/MonitorReporterTransformer.html", "kind" : "trait"}, {"name" : "me.frmr.kafka.detective.api.NoMatchFound", "shortDescription" : "A result from a MonitorMatchFinder indicating that no reference message that should matchthe provided test message was found in the reference window.", "members_case class" : [{"member" : "me.frmr.kafka.detective.api.NoMatchFound#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "me\/frmr\/kafka\/detective\/api\/NoMatchFound.html", "kind" : "case class"}, {"name" : "me.frmr.kafka.detective.api.SuccessfulMatchTest", "shortDescription" : "A match test result type indicating the match test was successful and that the providedtestMessage and referenceMessage actually do match.", "members_case class" : [{"member" : "me.frmr.kafka.detective.api.SuccessfulMatchTest#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "me\/frmr\/kafka\/detective\/api\/SuccessfulMatchTest.html", "kind" : "case class"}, {"name" : "me.frmr.kafka.detective.api.UnsuccessfulMatchTest", "shortDescription" : "A match test result type indicating the match test was unsuccessful and that the providedtestMessage and referenceMessage do not match.", "members_case class" : [{"member" : "me.frmr.kafka.detective.api.UnsuccessfulMatchTest#<init>", "error" : "unsupported entity"}, {"label" : "referenceMessage", "tail" : ": MonitorObjectEnvelope", "member" : "me.frmr.kafka.detective.api.UnsuccessfulMatchTest.referenceMessage", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#referenceMessage:me.frmr.kafka.detective.api.MonitorObjectEnvelope", "kind" : "val"}, {"label" : "testMessage", "tail" : ": MonitorObjectEnvelope", "member" : "me.frmr.kafka.detective.api.UnsuccessfulMatchTest.testMessage", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#testMessage:me.frmr.kafka.detective.api.MonitorObjectEnvelope", "kind" : "val"}, {"label" : "reason", "tail" : ": String", "member" : "me.frmr.kafka.detective.api.UnsuccessfulMatchTest.reason", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#reason:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "me\/frmr\/kafka\/detective\/api\/UnsuccessfulMatchTest.html", "kind" : "case class"}]};