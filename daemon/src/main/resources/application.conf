kafka-detective {
  max-worker-count-per-monitor = 4
  max-worker-count-per-monitor = ${?MAX_WORKER_COUNT}

  comparison-threads-per-worker = 10
  comparison-threads-per-worker = ${?COMPARISON_THREADS_PER_WORKER}

  queue-poll-interval-ms = 100
  queue-poll-interval-ms = ${?QUEUE_POLL_INTERVAL_MS}

  queue-reset-ms = 300000
  queue-reset-ms = ${?QUEUE_RESET_MS}

  monitors = [
    {
      identifier = "test-tool-monitor"
      identifier = ${?MONITOR_ID}

      reference-subject = {
        server = "localhost:9092"
        server = ${?REFERENCE_SERVER}

        topic = "kdtt1"
        topic = ${?REFERENCE_TOPIC}

        partitions = "0,1,2,3,4,5,6,7"
        partitions = ${?REFERENCE_PARTITION}

        deserializer = "me.frmr.kafka.detective.deserializer.StringDeserializer"
        deserializer = ${?REFERENCE_DESERIALIZER}
      }

      test-subject = {
        server = "localhost:9092"
        server = ${?TEST_SERVER}

        topic = "kdtt2"
        topic = ${?TEST_TOPIC}

        partitions = "0,1,2,3,4,5,6,7"
        partitions = ${?TEST_PARTITION}

        deserializer = "me.frmr.kafka.detective.deserializer.StringDeserializer"
        deserializer = ${?TEST_DESERIALIZER}
      }

      reference-window-size = 10000
      reference-window-size = ${?REFERENCE_WINDOW_SIZE}

      match-finder = "me.frmr.kafka.detective.matchfinder.KeyEqualsFinder"
      match-finder = ${?MATCH_FINDER}

      match-tester = "me.frmr.kafka.detective.matchtester.ValueEqualsTester"
      match-tester = ${?MATCH_TESTER}

      reporters = "me.frmr.kafka.detective.reporter.MetricsReporter,me.frmr.kafka.detective.reporter.KafkaTopicReporter"
      reporters = ${?REPORTERS}

      reporter-configs {
        kafka {
          topic = "kdtt-fails"
          topic = ${?KAFKA_REPORTER_TOPIC}

          key-transformer = ${?KAFKA_REPORTER_KEY_TRANSFORMER}
          value-transformer = ${?KAFKA_REPORTER_VALUE_TRANSFORMER}

          report-success = ${?KAFKA_REPORTER_REPORT_SUCCESS}
          report-ignored = ${?KAFKA_REPORTER_REPORT_IGNORED}
          report-key-miss = ${?KAFKA_REPORTER_REPORT_KEY_MISS}
          report-failed = ${?KAFKA_REPORTER_REPORT_FAILED}

          producer {
            "bootstrap.servers" = "localhost:9092"
            "bootstrap.servers" = ${?KAFKA_REPORTER_SERVER}

            "acks" = "all"
          }

          extra-metadata {
            "elasticsearch_index" = ${?KAFKA_REPORTER_ES_INDEX}
          }
        }
      }
    }
  ]
}
